1. Скопировать файл .env.example в .env
2. В .env отредактировать переменную DB_URI указав путь к БД
3. выполнить комманду npm i
4. выполнить комманду npm run start для запуска app.ts
   выполнить комманду npm run reindex для запуска переидексации
   выполнить комманду npm run sync для запуска онлайн-синхронизации

============

Fundraise Up Backend test

## Приложение `app.ts`

- Приложение вечно генерирует покупателей и вставляет их в БД.
- Для генерации используется библиотека ****[Faker](https://www.npmjs.com/package/@faker-js/faker)****.
- Покупатели создаются случайными пачками по 1 - 10 покупателей каждые 200 миллисекунд, и так же пачками вставляются в коллекцию `customers`.

## Приложение `sync.ts`

Это приложение копирует и анонимизирует покупателей.

- Приложение “слушает” появление и **изменение** документов в коллекции `customers` и анонимизирует их:
    - Заменяются содержимое полей `firstName`, `lastName`, часть до `@` в поле `email`, `address.line1`, `address.line2` и `postcode`.
    - Значения заменяются на 8-значную случайную, но детерминированную последовательность символов `[a-zA-Z\d]`.
- После анонимизации записи вставляются в `customers_anonymised` следующим образом:
    - Приложение накапливает пачки по 1,000 документов.
    - Если не удалось накопить пачку за 1 секунду, то вставляется то что есть.
- Приложение может быть перезапущено. В случае перезапуска оно должно продолжить с того места где остановилось, не пропустив те изменения, которые случились пока приложение было оффлайн.
- Приложение можно запустить в двух режимах:
    - Реалтайм синхронизация. Это дефолтное поведение, которое описано выше. Оно работает, если `sync.ts` запущен без аргументов.
    - Полная синхронизация. Включается, при наличии флага `--full-reindex`. В этом режиме приложение вместо того чтобы слушать изменения, должно запуститься и перелить все данные, анонимизировов их. В случае успеха, приложение завершает свою работу с кодом `0`.
- Оба режима могут работать параллельно. То есть одновременно можно запустить два инстанса — один в реалтайме, второй в режиме полной синхронизации.
- Документы в коллекции `customers` не удаляются, не стоит предусматривать поведение на этот случай.
